server.port=8082
spring.application.name=fsh-substitution

#配置Feign中定义的HouseRemoteClient服务的日志打印等级
logging.level.com.kimile.web.fsh.substitution.client.HouseRemoteClient=DEBUG

#配置之前启动Eureka服务的地址，在启动的时候需要将自身的信息注册到Eureka中去
eureka.client.serviceUrl.defaultZone=http://root:123456@localhost:8761/eureka/

#配置注册服务的Instance ID的显示，其默认值为：${spring.cloud.client.hostname}:${spring.application.name}:${spring.application.instance_id:${server.port}}
eureka.instance.instance-id=${spring.application.name}:${spring.cloud.client.ipAddress}:${spring.application.instance_id:${server.port}}
#配置使用IP进行注册，此时web页面点击服务的Instance ID跳转的时候，链接为IP地址，而不是主机名
eureka.instance.preferIpAddress=true

#配置服务自定义的元数据
eureka.instance.metadataMap.yuantiandi=yinjihuan

#开启Ribbon的饥饿加载模式，
#不开启情况下，Ribbon的客户端是在第一次请求的时候初始化的，如果超时时间比较短的话，初始化Client的时间加上请求接口的时间，有可能导致第一次请求超时；
#开启Ribbon的饥饿加载模式后，Ribbon的客户端会在服务启动的时候初始化指定需要调用的服务
ribbon.eager-load.enabled=true
#制定需要饥饿加载的服务名，也就是你需要调用的服务，若有多个则用逗号,隔开
ribbon.eager-load.clients=fsh-house
#配置负载均衡策略
#☆BestAvailableRule:选择一个最小的并发请求的Server，逐个考察Server，如果Server被标记为错误了，则跳过，最后再选择其中ActiveRequestCount最小的Server
#☆AvailabilityFilteringRule：过滤掉那些一直连接失败的且被标记为circuit tripped的后端Server，
# 并过滤掉那些高并发的后端Server或者使用一个AvailabilityPredicate来包含过滤Server的逻辑，其实就是检查Status里记录的每个Server的运行状态
#☆ZoneAvoidanceRule：使用ZoneAvoidancePredicate和AvailabilityPredicate来判断是否选择某个Server，前一个判断判定一个Zone的运行性能是否可用，
# 剔除不可用的Zone的所有Server，AvailabilityPredicate用于过滤掉连接数过多的Server；
#☆RandomRule：随机选择一个Server；
#☆RetryRule：对选定的负载均衡策略加上重试机制，
# 也就是说当选定了某个策略进行请求负载时，在一个配置时间段内若选择Server不成功，则一直尝试使用subRule的方式选择一个可用的Server；
#☆RoundRobinRule：轮询选择，轮询index，选择index对应位置的Server；
#☆ResponseTimeWeightedRule：作用同WeightedResponseTimeRule，不建议使用，后来改名为WeightedResponseTimeRule
#☆WeightedResponseTimeRule：根据响应时间分配一个Weight(权重)，响应时间越长，Weight越小，被选中的可能性越低。
fsh-house.ribbon.NFLoadBalancerRuleClassName=com.netflix.loadbalancer.RoundRobinRule
#fsh-house.ribbon.NFLoadBalancerRuleClassName=com.kimile.web.fsh.substitution.configs.MyIRule

#Ribbon负载均能恒调用时，禁用Eureka，此时就不能用服务名称去调用接口了，必须指定服务地址
#ribbon.eureka.enabled=false
#Ribbon禁用Eureka后，手动配置服务地址：
#fsh-house.ribbon.listOfServers=localhost:8083,localhost:8084

#配置请求连接的超时时间
ribbon.connectTimeout=2000
#请求处理的超时时间
ribbon.readTimeout=5000

#重试机制的实现可以通过两种方式：
#1.利用Ribbon自带的重试策略进行重试，此时只需要指定某个服务的负载策略为重试即可：
#fsh-house.ribbon.NFLoadBalancerRuleClassName=com.netflix.loadbalancer.RetryRule
#2.可以通过Spring Retry来进行重试操作，即在pom.xml中引入依赖即可
#配置当前实例的重试次数
ribbon.maxAutoRetries=1
#切换实例的重试次数
ribbon.maxAutoRetriesNexServer=3
#对所有操作请求都进行重试
ribbon.okToRetryOnAllOperations=true

#feign集成使用okhttp，默认使用的是HTTPClient，所以需要先禁用HTTPClient，再启用okhttp，此时，需要在pom.xml中引入OkHttp的依赖jar包
#  关于配置文件可参考源码：org.springframework.cloud.netflix.feign.FeignAutoConfiguration
feign.httpclient.enabled=false
feign.okhttp.enabled=true

#可以配置GZIP来压缩数据
feign.compression.request.enabled=true
feign.compression.response.enabled=true
#配置压缩的类型、最小压缩值的标准
feign.compression.request.mime-types=text/xml,application/xml,application/json
feign.compression.request.min-request-size=2048

#开启Feign对Hystrix的支持
feign.hystrix.enabled=true
#Feign禁用Hystrix组件
#feign.hystrix.enabled=false
