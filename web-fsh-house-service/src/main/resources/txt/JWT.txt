1.JWT(Json Web Token)是为了在网络应用环境间传递声明而执行的一种基于Json的开放标准。
  JWT的声明一般被用来在身份提供者和服务提供者间传递被认证的用户身份信息，以便于从资源服务器获取资源。
2.JWT由三部分组成，第一部分成为头部(Header)，第二部分成为消息体(Payload)，第三部分是签名(Signature):
  token = encodeBase64(header) + '.' + encodeBase64(payload) + '.' + encodeBase64(signature);
  头部的信息通常由两部分内容组成，令牌的类型和使用的签名算法，比如下面的代码：
    {"alg":"HS256", "typ":"JWT"}
  消息体中可以携带一些需要的信息，比如用户ID，如：
    {"id":"1234567890", "name":"John Doe", "admin":true}
  签名是用来判断消息在传递的路上是否被篡改，从而保证数据的安全性，格式如下：
    HMACSHA256( base64UrlEncode(header) + "." + base64UrlEncode(payload), secret )
3.使用JWT工具类进行认证主要有以下几个方法：
  1）生成Token：在进行用户认证之后，通过用户的ID来生成一个Token，这个Token采用RSA加密的方式进行加密，Token的内容包括用户ID和过期时间；
  2）检查Token是否合法：是根据调用方带来的Token检查是否为合法用户，就是对Token进行解密操作，能解密并且在有效期内表示合法，合法则返回用户ID；
  3）刷新RSA公钥以及私钥：作用是防止公钥、私钥泄密，公钥、私钥一般是写死的，不过我们可以做成配置的。集成配置管理中心后，可以对公钥、私钥进行动态修改，
  修改之后需要重新初始化公钥、私钥的对象信息。
    